
IncomingMessage {
    _readableState: ReadableState {
        objectMode: false,
            highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
            pipes: null,
                pipesCount: 0,
                    flowing: null,
                        ended: false,
                            endEmitted: false,
                                reading: false,
                                    sync: true,
                                        needReadable: false,
                                            emittedReadable: false,
                                                readableListening: false,
                                                    resumeScheduled: false,
                                                        emitClose: true,
                                                            autoDestroy: false,
                                                                destroyed: false,
                                                                    defaultEncoding: 'utf8',
                                                                        awaitDrain: 0,
                                                                            readingMore: true,
                                                                                decoder: null,
                                                                                    encoding: null,
                                                                                        [Symbol(kPaused)]: null
    },
    readable: true,
        _events: [Object: null prototype] {
        end: [Function: resetHeadersTimeoutOnReqEnd]
    },
    _eventsCount: 1,
        _maxListeners: undefined,
            socket: Socket {
        connecting: false,
            _hadError: false,
                _parent: null,
                    _host: null,
                        _readableState: ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: null,
                    pipesCount: 0,
                        flowing: true,
                            ended: false,
                                endEmitted: false,
                                    reading: true,
                                        sync: false,
                                            needReadable: true,
                                                emittedReadable: false,
                                                    readableListening: false,
                                                        resumeScheduled: false,
                                                            emitClose: false,
                                                                autoDestroy: false,
                                                                    destroyed: false,
                                                                        defaultEncoding: 'utf8',
                                                                            awaitDrain: 0,
                                                                                readingMore: false,
                                                                                    decoder: null,
                                                                                        encoding: null,
                                                                                            [Symbol(kPaused)]: false
        },
        readable: true,
            _events: [Object: null prototype] {
            end: [Array],
                timeout: [Function: socketOnTimeout],
                    data: [Function: bound socketOnData],
                        error: [Function: socketOnError],
                            close: [Array],
                                drain: [Function: bound socketOnDrain],
                                    resume: [Function: onSocketResume],
                                        pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
            _maxListeners: undefined,
                _writableState: WritableState {
            objectMode: false,
                highWaterMark: 16384,
                    finalCalled: false,
                        needDrain: false,
                            ending: false,
                                ended: false,
                                    finished: false,
                                        destroyed: false,
                                            decodeStrings: false,
                                                defaultEncoding: 'utf8',
                                                    length: 0,
                                                        writing: false,
                                                            corked: 0,
                                                                sync: true,
                                                                    bufferProcessing: false,
                                                                        onwrite: [Function: bound onwrite],
                                                                            writecb: null,
                                                                                writelen: 0,
                                                                                    afterWriteTickInfo: null,
                                                                                        bufferedRequest: null,
                                                                                            lastBufferedRequest: null,
                                                                                                pendingcb: 0,
                                                                                                    prefinished: false,
                                                                                                        errorEmitted: false,
                                                                                                            emitClose: false,
                                                                                                                autoDestroy: false,
                                                                                                                    bufferedRequestCount: 0,
                                                                                                                        corkedRequestsFree: [Object]
        },
        writable: true,
            allowHalfOpen: true,
                _sockname: null,
                    _pendingData: null,
                        _pendingEncoding: '',
                            server: Server {
            insecureHTTPParser: undefined,
                _events: [Object: null prototype],
                    _eventsCount: 2,
                        _maxListeners: undefined,
                            _connections: 1,
                                _handle: [TCP],
                                    _usingWorkers: false,
                                        _workers: [],
                                            _unref: false,
                                                allowHalfOpen: true,
                                                    pauseOnConnect: false,
                                                        httpAllowHalfOpen: false,
                                                            timeout: 120000,
                                                                keepAliveTimeout: 5000,
                                                                    maxHeadersCount: null,
                                                                        headersTimeout: 40000,
                                                                            _connectionKey: '6::::3100',
                                                                                [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                                                                    [Symbol(ServerResponse)]: [Function: ServerResponse],
                                                                                        [Symbol(kCapture)]: false,
                                                                                            [Symbol(asyncId)]: 107
        },
        _server: Server {
            insecureHTTPParser: undefined,
                _events: [Object: null prototype],
                    _eventsCount: 2,
                        _maxListeners: undefined,
                            _connections: 1,
                                _handle: [TCP],
                                    _usingWorkers: false,
                                        _workers: [],
                                            _unref: false,
                                                allowHalfOpen: true,
                                                    pauseOnConnect: false,
                                                        httpAllowHalfOpen: false,
                                                            timeout: 120000,
                                                                keepAliveTimeout: 5000,
                                                                    maxHeadersCount: null,
                                                                        headersTimeout: 40000,
                                                                            _connectionKey: '6::::3100',
                                                                                [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                                                                    [Symbol(ServerResponse)]: [Function: ServerResponse],
                                                                                        [Symbol(kCapture)]: false,
                                                                                            [Symbol(asyncId)]: 107
        },
        timeout: 120000,
            parser: HTTPParser {
            '0': [Function: parserOnHeaders],
                '1': [Function: parserOnHeadersComplete],
                    '2': [Function: parserOnBody],
                        '3': [Function: parserOnMessageComplete],
                            '4': [Function: bound onParserExecute],
                                _headers: [],
                                    _url: '',
                                        socket: [Circular],
                                            incoming: [Circular],
                                                outgoing: null,
                                                    maxHeaderPairs: 2000,
                                                        _consumed: true,
                                                            onIncoming: [Function: bound parserOnIncoming],
                                                                parsingHeadersStart: 0
        },
        on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
                prependListener: [Function: socketListenerWrap],
                    _paused: false,
                        _httpMessage: ServerResponse {
            _events: [Object: null prototype],
                _eventsCount: 1,
                    _maxListeners: undefined,
                        outputData: [],
                            outputSize: 0,
                                writable: true,
                                    _last: false,
                                        chunkedEncoding: false,
                                            shouldKeepAlive: true,
                                                useChunkedEncodingByDefault: true,
                                                    sendDate: true,
                                                        _removedConnection: false,
                                                            _removedContLen: false,
                                                                _removedTE: false,
                                                                    _contentLength: null,
                                                                        _hasBody: true,
                                                                            _trailer: '',
                                                                                finished: false,
                                                                                    _headerSent: false,
                                                                                        socket: [Circular],
                                                                                            connection: [Circular],
                                                                                                _header: null,
                                                                                                    _onPendingData: [Function: bound updateOutgoingData],
                                                                                                        _sent100: false,
                                                                                                            _expect_continue: false,
                                                                                                                req: [Circular],
                                                                                                                    locals: [Object: null prototype] { },
            [Symbol(kCapture)]: false,
                [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(asyncId)]: 244,
            [Symbol(kHandle)]: TCP {
            reading: true,
                onconnection: null,
                    _consumed: true,
                        [Symbol(owner)]: [Circular]
        },
        [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
            _idleTimeout: 120000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 52636,
                            _onTimeout: [Function: bound],
                                _timerArgs: undefined,
                                    _repeat: null,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(asyncId)]: 245,
                                                    [Symbol(triggerId)]: 244
        },
        [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                        [Symbol(kBytesRead)]: 0,
                            [Symbol(kBytesWritten)]: 0
    },
    connection: Socket {
        connecting: false,
            _hadError: false,
                _parent: null,
                    _host: null,
                        _readableState: ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: null,
                    pipesCount: 0,
                        flowing: true,
                            ended: false,
                                endEmitted: false,
                                    reading: true,
                                        sync: false,
                                            needReadable: true,
                                                emittedReadable: false,
                                                    readableListening: false,
                                                        resumeScheduled: false,
                                                            emitClose: false,
                                                                autoDestroy: false,
                                                                    destroyed: false,
                                                                        defaultEncoding: 'utf8',
                                                                            awaitDrain: 0,
                                                                                readingMore: false,
                                                                                    decoder: null,
                                                                                        encoding: null,
                                                                                            [Symbol(kPaused)]: false
        },
        readable: true,
            _events: [Object: null prototype] {
            end: [Array],
                timeout: [Function: socketOnTimeout],
                    data: [Function: bound socketOnData],
                        error: [Function: socketOnError],
                            close: [Array],
                                drain: [Function: bound socketOnDrain],
                                    resume: [Function: onSocketResume],
                                        pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
            _maxListeners: undefined,
                _writableState: WritableState {
            objectMode: false,
                highWaterMark: 16384,
                    finalCalled: false,
                        needDrain: false,
                            ending: false,
                                ended: false,
                                    finished: false,
                                        destroyed: false,
                                            decodeStrings: false,
                                                defaultEncoding: 'utf8',
                                                    length: 0,
                                                        writing: false,
                                                            corked: 0,
                                                                sync: true,
                                                                    bufferProcessing: false,
                                                                        onwrite: [Function: bound onwrite],
                                                                            writecb: null,
                                                                                writelen: 0,
                                                                                    afterWriteTickInfo: null,
                                                                                        bufferedRequest: null,
                                                                                            lastBufferedRequest: null,
                                                                                                pendingcb: 0,
                                                                                                    prefinished: false,
                                                                                                        errorEmitted: false,
                                                                                                            emitClose: false,
                                                                                                                autoDestroy: false,
                                                                                                                    bufferedRequestCount: 0,
                                                                                                                        corkedRequestsFree: [Object]
        },
        writable: true,
            allowHalfOpen: true,
                _sockname: null,
                    _pendingData: null,
                        _pendingEncoding: '',
                            server: Server {
            insecureHTTPParser: undefined,
                _events: [Object: null prototype],
                    _eventsCount: 2,
                        _maxListeners: undefined,
                            _connections: 1,
                                _handle: [TCP],
                                    _usingWorkers: false,
                                        _workers: [],
                                            _unref: false,
                                                allowHalfOpen: true,
                                                    pauseOnConnect: false,
                                                        httpAllowHalfOpen: false,
                                                            timeout: 120000,
                                                                keepAliveTimeout: 5000,
                                                                    maxHeadersCount: null,
                                                                        headersTimeout: 40000,
                                                                            _connectionKey: '6::::3100',
                                                                                [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                                                                    [Symbol(ServerResponse)]: [Function: ServerResponse],
                                                                                        [Symbol(kCapture)]: false,
                                                                                            [Symbol(asyncId)]: 107
        },
        _server: Server {
            insecureHTTPParser: undefined,
                _events: [Object: null prototype],
                    _eventsCount: 2,
                        _maxListeners: undefined,
                            _connections: 1,
                                _handle: [TCP],
                                    _usingWorkers: false,
                                        _workers: [],
                                            _unref: false,
                                                allowHalfOpen: true,
                                                    pauseOnConnect: false,
                                                        httpAllowHalfOpen: false,
                                                            timeout: 120000,
                                                                keepAliveTimeout: 5000,
                                                                    maxHeadersCount: null,
                                                                        headersTimeout: 40000,
                                                                            _connectionKey: '6::::3100',
                                                                                [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                                                                    [Symbol(ServerResponse)]: [Function: ServerResponse],
                                                                                        [Symbol(kCapture)]: false,
                                                                                            [Symbol(asyncId)]: 107
        },
        timeout: 120000,
            parser: HTTPParser {
            '0': [Function: parserOnHeaders],
                '1': [Function: parserOnHeadersComplete],
                    '2': [Function: parserOnBody],
                        '3': [Function: parserOnMessageComplete],
                            '4': [Function: bound onParserExecute],
                                _headers: [],
                                    _url: '',
                                        socket: [Circular],
                                            incoming: [Circular],
                                                outgoing: null,
                                                    maxHeaderPairs: 2000,
                                                        _consumed: true,
                                                            onIncoming: [Function: bound parserOnIncoming],
                                                                parsingHeadersStart: 0
        },
        on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
                prependListener: [Function: socketListenerWrap],
                    _paused: false,
                        _httpMessage: ServerResponse {
            _events: [Object: null prototype],
                _eventsCount: 1,
                    _maxListeners: undefined,
                        outputData: [],
                            outputSize: 0,
                                writable: true,
                                    _last: false,
                                        chunkedEncoding: false,
                                            shouldKeepAlive: true,
                                                useChunkedEncodingByDefault: true,
                                                    sendDate: true,
                                                        _removedConnection: false,
                                                            _removedContLen: false,
                                                                _removedTE: false,
                                                                    _contentLength: null,
                                                                        _hasBody: true,
                                                                            _trailer: '',
                                                                                finished: false,
                                                                                    _headerSent: false,
                                                                                        socket: [Circular],
                                                                                            connection: [Circular],
                                                                                                _header: null,
                                                                                                    _onPendingData: [Function: bound updateOutgoingData],
                                                                                                        _sent100: false,
                                                                                                            _expect_continue: false,
                                                                                                                req: [Circular],
                                                                                                                    locals: [Object: null prototype] { },
            [Symbol(kCapture)]: false,
                [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(asyncId)]: 244,
            [Symbol(kHandle)]: TCP {
            reading: true,
                onconnection: null,
                    _consumed: true,
                        [Symbol(owner)]: [Circular]
        },
        [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
            _idleTimeout: 120000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 52636,
                            _onTimeout: [Function: bound],
                                _timerArgs: undefined,
                                    _repeat: null,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(asyncId)]: 245,
                                                    [Symbol(triggerId)]: 244
        },
        [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                        [Symbol(kBytesRead)]: 0,
                            [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
        httpVersionMinor: 1,
            httpVersion: '1.1',
                complete: false,
                    headers: {
        host: 'localhost:3100',
            'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
                accept: 'application/json, text/plain, */*',
                    'accept-language': 'en-US,en;q=0.5',
                        'accept-encoding': 'gzip, deflate',
                            referer: 'http://localhost:3000/products?page=1',
                                origin: 'http://localhost:3000',
                                    connection: 'keep-alive',
                                        'if-none-match': 'W/"16b-VLeulpCawtHYLOlGiVhDefr6yEk"'
    },
    rawHeaders: [
        'Host',
        'localhost:3100',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0',
        'Accept',
        'application/json, text/plain, */*',
        'Accept-Language',
        'en-US,en;q=0.5',
        'Accept-Encoding',
        'gzip, deflate',
        'Referer',
        'http://localhost:3000/products?page=1',
        'Origin',
        'http://localhost:3000',
        'Connection',
        'keep-alive',
        'If-None-Match',
        'W/"16b-VLeulpCawtHYLOlGiVhDefr6yEk"'
    ],
        trailers: { },
    rawTrailers: [],
        aborted: false,
            upgrade: false,
                url: '/',
                    method: 'GET',
                        statusCode: null,
                            statusMessage: null,
                                client: Socket {
        connecting: false,
            _hadError: false,
                _parent: null,
                    _host: null,
                        _readableState: ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                    buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: null,
                    pipesCount: 0,
                        flowing: true,
                            ended: false,
                                endEmitted: false,
                                    reading: true,
                                        sync: false,
                                            needReadable: true,
                                                emittedReadable: false,
                                                    readableListening: false,
                                                        resumeScheduled: false,
                                                            emitClose: false,
                                                                autoDestroy: false,
                                                                    destroyed: false,
                                                                        defaultEncoding: 'utf8',
                                                                            awaitDrain: 0,
                                                                                readingMore: false,
                                                                                    decoder: null,
                                                                                        encoding: null,
                                                                                            [Symbol(kPaused)]: false
        },
        readable: true,
            _events: [Object: null prototype] {
            end: [Array],
                timeout: [Function: socketOnTimeout],
                    data: [Function: bound socketOnData],
                        error: [Function: socketOnError],
                            close: [Array],
                                drain: [Function: bound socketOnDrain],
                                    resume: [Function: onSocketResume],
                                        pause: [Function: onSocketPause]
        },
        _eventsCount: 8,
            _maxListeners: undefined,
                _writableState: WritableState {
            objectMode: false,
                highWaterMark: 16384,
                    finalCalled: false,
                        needDrain: false,
                            ending: false,
                                ended: false,
                                    finished: false,
                                        destroyed: false,
                                            decodeStrings: false,
                                                defaultEncoding: 'utf8',
                                                    length: 0,
                                                        writing: false,
                                                            corked: 0,
                                                                sync: true,
                                                                    bufferProcessing: false,
                                                                        onwrite: [Function: bound onwrite],
                                                                            writecb: null,
                                                                                writelen: 0,
                                                                                    afterWriteTickInfo: null,
                                                                                        bufferedRequest: null,
                                                                                            lastBufferedRequest: null,
                                                                                                pendingcb: 0,
                                                                                                    prefinished: false,
                                                                                                        errorEmitted: false,
                                                                                                            emitClose: false,
                                                                                                                autoDestroy: false,
                                                                                                                    bufferedRequestCount: 0,
                                                                                                                        corkedRequestsFree: [Object]
        },
        writable: true,
            allowHalfOpen: true,
                _sockname: null,
                    _pendingData: null,
                        _pendingEncoding: '',
                            server: Server {
            insecureHTTPParser: undefined,
                _events: [Object: null prototype],
                    _eventsCount: 2,
                        _maxListeners: undefined,
                            _connections: 1,
                                _handle: [TCP],
                                    _usingWorkers: false,
                                        _workers: [],
                                            _unref: false,
                                                allowHalfOpen: true,
                                                    pauseOnConnect: false,
                                                        httpAllowHalfOpen: false,
                                                            timeout: 120000,
                                                                keepAliveTimeout: 5000,
                                                                    maxHeadersCount: null,
                                                                        headersTimeout: 40000,
                                                                            _connectionKey: '6::::3100',
                                                                                [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                                                                    [Symbol(ServerResponse)]: [Function: ServerResponse],
                                                                                        [Symbol(kCapture)]: false,
                                                                                            [Symbol(asyncId)]: 107
        },
        _server: Server {
            insecureHTTPParser: undefined,
                _events: [Object: null prototype],
                    _eventsCount: 2,
                        _maxListeners: undefined,
                            _connections: 1,
                                _handle: [TCP],
                                    _usingWorkers: false,
                                        _workers: [],
                                            _unref: false,
                                                allowHalfOpen: true,
                                                    pauseOnConnect: false,
                                                        httpAllowHalfOpen: false,
                                                            timeout: 120000,
                                                                keepAliveTimeout: 5000,
                                                                    maxHeadersCount: null,
                                                                        headersTimeout: 40000,
                                                                            _connectionKey: '6::::3100',
                                                                                [Symbol(IncomingMessage)]: [Function: IncomingMessage],
                                                                                    [Symbol(ServerResponse)]: [Function: ServerResponse],
                                                                                        [Symbol(kCapture)]: false,
                                                                                            [Symbol(asyncId)]: 107
        },
        timeout: 120000,
            parser: HTTPParser {
            '0': [Function: parserOnHeaders],
                '1': [Function: parserOnHeadersComplete],
                    '2': [Function: parserOnBody],
                        '3': [Function: parserOnMessageComplete],
                            '4': [Function: bound onParserExecute],
                                _headers: [],
                                    _url: '',
                                        socket: [Circular],
                                            incoming: [Circular],
                                                outgoing: null,
                                                    maxHeaderPairs: 2000,
                                                        _consumed: true,
                                                            onIncoming: [Function: bound parserOnIncoming],
                                                                parsingHeadersStart: 0
        },
        on: [Function: socketListenerWrap],
            addListener: [Function: socketListenerWrap],
                prependListener: [Function: socketListenerWrap],
                    _paused: false,
                        _httpMessage: ServerResponse {
            _events: [Object: null prototype],
                _eventsCount: 1,
                    _maxListeners: undefined,
                        outputData: [],
                            outputSize: 0,
                                writable: true,
                                    _last: false,
                                        chunkedEncoding: false,
                                            shouldKeepAlive: true,
                                                useChunkedEncodingByDefault: true,
                                                    sendDate: true,
                                                        _removedConnection: false,
                                                            _removedContLen: false,
                                                                _removedTE: false,
                                                                    _contentLength: null,
                                                                        _hasBody: true,
                                                                            _trailer: '',
                                                                                finished: false,
                                                                                    _headerSent: false,
                                                                                        socket: [Circular],
                                                                                            connection: [Circular],
                                                                                                _header: null,
                                                                                                    _onPendingData: [Function: bound updateOutgoingData],
                                                                                                        _sent100: false,
                                                                                                            _expect_continue: false,
                                                                                                                req: [Circular],
                                                                                                                    locals: [Object: null prototype] { },
            [Symbol(kCapture)]: false,
                [Symbol(kNeedDrain)]: false,
                    [Symbol(corked)]: 0,
                        [Symbol(kOutHeaders)]: [Object: null prototype]
        },
        [Symbol(asyncId)]: 244,
            [Symbol(kHandle)]: TCP {
            reading: true,
                onconnection: null,
                    _consumed: true,
                        [Symbol(owner)]: [Circular]
        },
        [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]: Timeout {
            _idleTimeout: 120000,
                _idlePrev: [TimersList],
                    _idleNext: [TimersList],
                        _idleStart: 52636,
                            _onTimeout: [Function: bound],
                                _timerArgs: undefined,
                                    _repeat: null,
                                        _destroyed: false,
                                            [Symbol(refed)]: false,
                                                [Symbol(asyncId)]: 245,
                                                    [Symbol(triggerId)]: 244
        },
        [Symbol(kBuffer)]: null,
            [Symbol(kBufferCb)]: null,
                [Symbol(kBufferGen)]: null,
                    [Symbol(kCapture)]: false,
                        [Symbol(kBytesRead)]: 0,
                            [Symbol(kBytesWritten)]: 0
    },
    _consuming: false,
        _dumped: false,
            next: [Function: next],
                baseUrl: '/products',
                    originalUrl: '/products',
                        _parsedUrl: Url {
        protocol: null,
            slashes: null,
                auth: null,
                    host: null,
                        port: null,
                            hostname: null,
                                hash: null,
                                    search: null,
                                        query: null,
                                            pathname: '/',
                                                path: '/',
                                                    href: '/',
                                                        _raw: '/'
    },
    params: { },
    query: { },
    res: ServerResponse {
        _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
        _eventsCount: 1,
            _maxListeners: undefined,
                outputData: [],
                    outputSize: 0,
                        writable: true,
                            _last: false,
                                chunkedEncoding: false,
                                    shouldKeepAlive: true,
                                        useChunkedEncodingByDefault: true,
                                            sendDate: true,
                                                _removedConnection: false,
                                                    _removedContLen: false,
                                                        _removedTE: false,
                                                            _contentLength: null,
                                                                _hasBody: true,
                                                                    _trailer: '',
                                                                        finished: false,
                                                                            _headerSent: false,
                                                                                socket: Socket {
            connecting: false,
                _hadError: false,
                    _parent: null,
                        _host: null,
                            _readableState: [ReadableState],
                                readable: true,
                                    _events: [Object: null prototype],
                                        _eventsCount: 8,
                                            _maxListeners: undefined,
                                                _writableState: [WritableState],
                                                    writable: true,
                                                        allowHalfOpen: true,
                                                            _sockname: null,
                                                                _pendingData: null,
                                                                    _pendingEncoding: '',
                                                                        server: [Server],
                                                                            _server: [Server],
                                                                                timeout: 120000,
                                                                                    parser: [HTTPParser],
                                                                                        on: [Function: socketListenerWrap],
                                                                                            addListener: [Function: socketListenerWrap],
                                                                                                prependListener: [Function: socketListenerWrap],
                                                                                                    _paused: false,
                                                                                                        _httpMessage: [Circular],
                                                                                                            [Symbol(asyncId)]: 244,
                                                                                                                [Symbol(kHandle)]: [TCP],
                                                                                                                    [Symbol(lastWriteQueueSize)]: 0,
                                                                                                                        [Symbol(timeout)]: Timeout {
                _idleTimeout: 120000,
                    _idlePrev: [TimersList],
                        _idleNext: [TimersList],
                            _idleStart: 52636,
                                _onTimeout: [Function: bound],
                                    _timerArgs: undefined,
                                        _repeat: null,
                                            _destroyed: false,
                                                [Symbol(refed)]: false,
                                                    [Symbol(asyncId)]: 245,
                                                        [Symbol(triggerId)]: 244
            },
            [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                            [Symbol(kBytesRead)]: 0,
                                [Symbol(kBytesWritten)]: 0
        },
        connection: Socket {
            connecting: false,
                _hadError: false,
                    _parent: null,
                        _host: null,
                            _readableState: [ReadableState],
                                readable: true,
                                    _events: [Object: null prototype],
                                        _eventsCount: 8,
                                            _maxListeners: undefined,
                                                _writableState: [WritableState],
                                                    writable: true,
                                                        allowHalfOpen: true,
                                                            _sockname: null,
                                                                _pendingData: null,
                                                                    _pendingEncoding: '',
                                                                        server: [Server],
                                                                            _server: [Server],
                                                                                timeout: 120000,
                                                                                    parser: [HTTPParser],
                                                                                        on: [Function: socketListenerWrap],
                                                                                            addListener: [Function: socketListenerWrap],
                                                                                                prependListener: [Function: socketListenerWrap],
                                                                                                    _paused: false,
                                                                                                        _httpMessage: [Circular],
                                                                                                            [Symbol(asyncId)]: 244,
                                                                                                                [Symbol(kHandle)]: [TCP],
                                                                                                                    [Symbol(lastWriteQueueSize)]: 0,
                                                                                                                        [Symbol(timeout)]: Timeout {
                _idleTimeout: 120000,
                    _idlePrev: [TimersList],
                        _idleNext: [TimersList],
                            _idleStart: 52636,
                                _onTimeout: [Function: bound],
                                    _timerArgs: undefined,
                                        _repeat: null,
                                            _destroyed: false,
                                                [Symbol(refed)]: false,
                                                    [Symbol(asyncId)]: 245,
                                                        [Symbol(triggerId)]: 244
            },
            [Symbol(kBuffer)]: null,
                [Symbol(kBufferCb)]: null,
                    [Symbol(kBufferGen)]: null,
                        [Symbol(kCapture)]: false,
                            [Symbol(kBytesRead)]: 0,
                                [Symbol(kBytesWritten)]: 0
        },
        _header: null,
            _onPendingData: [Function: bound updateOutgoingData],
                _sent100: false,
                    _expect_continue: false,
                        req: [Circular],
                            locals: [Object: null prototype] { },
        [Symbol(kCapture)]: false,
            [Symbol(kNeedDrain)]: false,
                [Symbol(corked)]: 0,
                    [Symbol(kOutHeaders)]: [Object: null prototype] {
            'x-powered-by': [Array],
                'access-control-allow-origin': [Array],
                    'access-control-allow-methods': [Array],
                        'access-control-allow-headers': [Array]
        }
    },
    body: { },
    route: Route { path: '/', stack: [[Layer]], methods: { get: true } },
    [Symbol(kCapture)]: false
}